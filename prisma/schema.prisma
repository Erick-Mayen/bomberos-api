generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model personal {
  id_personal         Int           @id @default(autoincrement())
  primer_nombre       String        @db.VarChar(50)
  segundo_nombre      String?       @db.VarChar(50)
  primer_apellido     String        @db.VarChar(50)
  segundo_apellido    String?       @db.VarChar(50)
  id_tipo_personal    Int
  activo              Boolean       @default(true)
  fecha_creacion      DateTime      @default(now()) @db.DateTime(0)
  fecha_actualizacion DateTime      @default(now()) @db.DateTime(0)
  usuario_creacion    Int
  tipo_personal       tipo_personal @relation(fields: [id_tipo_personal], references: [id_tipo_personal], onUpdate: Restrict, map: "fk_tipo_personal")
  usuario_creador     usuario       @relation("personalCreadoPorUsuario", fields: [usuario_creacion], references: [id_usuario], onUpdate: Restrict, map: "fk_usuario_creacion_personal")
  usuariosAsignados   usuario[]     @relation("usuarioAsignado")

  @@index([id_tipo_personal], map: "fk_tipo_personal")
  @@index([usuario_creacion], map: "fk_usuario_creacion_personal")
}

model rol {
  id_rol     Int       @id @default(autoincrement())
  nombre_rol String    @db.VarChar(50)
  usuario    usuario[]
}

model tipo_personal {
  id_tipo_personal Int        @id @default(autoincrement())
  nombre           String     @db.VarChar(50)
  personal         personal[]
}

model usuario {
  id_usuario          Int        @id @default(autoincrement())
  nombre_usuario      String     @unique(map: "nombre_usuario") @db.VarChar(15)
  contrasenia         String     @db.VarChar(255)
  id_personal         Int?
  id_rol              Int
  activo              Boolean    @default(true)
  fecha_creacion      DateTime   @default(now()) @db.DateTime(0)
  fecha_actualizacion DateTime   @default(now()) @db.DateTime(0)
  usuario_creacion    Int?
  personalCreado      personal[] @relation("personalCreadoPorUsuario")
  personalAsignado    personal?  @relation("usuarioAsignado", fields: [id_personal], references: [id_personal], onDelete: Restrict, onUpdate: Restrict, map: "usuario_ibfk_1")
  rol                 rol        @relation(fields: [id_rol], references: [id_rol], onUpdate: Restrict, map: "usuario_ibfk_2")
  usuario             usuario?   @relation("usuarioTousuario", fields: [usuario_creacion], references: [id_usuario], onDelete: Restrict, onUpdate: Restrict, map: "usuario_ibfk_3")
  other_usuario       usuario[]  @relation("usuarioTousuario")

  @@index([id_personal], map: "id_personal")
  @@index([id_rol], map: "id_rol")
  @@index([usuario_creacion], map: "usuario_creacion")
}
